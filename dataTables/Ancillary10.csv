element	attr	description	component	animatable	value	value.def
circle	cxy	cxy =v is equivalent to  cx=v[1], cy=v[2]	cx|cy	yes.	<coordinate>[2]	Sets the center of the circle. The default is c(0,0)
ellipse	cxy	cxy =v is equivalent to  cx=v[1], cy=v[2]	cx|cy	yes.	<coordinate>[2]	Sets the center of the ellipse. The default is c(0,0).
radialGradient	cxy	cxy =v is equivalent to  cx=v[1], cy=v[2]	cx|cy	yes.	<coordinate>[2]	Sets center of the ending-stop circle (the location of the 100% stop) of the radialGradient.  Default is c(50%, 50%).
altGlyph	dxy	dxy =v is equivalent to  dx=v[1,], dy=v[2,]	dx|dy	yes.	<length>[2,N]	Specifies a sequence of xy-shifts  for the first n characters as the columns of a 2xn matrix.  The  first row contains the x-shifts, the second row the y-shifts.    Alternatively one may specify the shifts with the value as c(x1,y1, ...xN,yN). Again, these shifts start at the current text position for the characters within this **tspan** element or any of its descendants.
glyphRef	dxy	dxy =v is equivalent to  dx=v[1,], dy=v[2,]	dx|dy	no.	<length>[2,N]	Specifies a sequence of xy-shifts  for the first n characters as the columns of a 2xn matrix.  The  first row contains the x-shifts, the second row the y-shifts.    Alternatively one may specify the shifts with the value as c(x1,y1, ...xN,yN). Again, these shifts start at the current text position for the characters within this **glyphRef** element or any of its descendants.
tref	dxy	dxy =v is equivalent to  dx=v[1,], dy=v[2,]	dx|dy	yes.	<length>[2,N]	Specifies a sequence of xy-shifts  for the first n characters as the columns of a 2xn matrix.  The  first row contains the x-shifts, the second row the y-shifts.    Alternatively one may specify the shifts with the value as c(x1,y1, ...xN,yN). Again, these shifts start at the current text position for the characters within this **tref** element or any of its descendants.
tspan	dxy	dxy =v is equivalent to  dx=v[1,], dy=v[2,]	dx|dy	yes.	<length>[2,N]	Specifies a sequence of xy-shifts  for the first n characters as the columns of a 2xn matrix.  The  first row contains the x-shifts, the second row the y-shifts.    Alternatively one may specify the shifts with the value as c(x1,y1, ...xN,yN). Again, these shifts start at the current text position for the characters within this **tspan** element or any of its descendants.
text	dxy	dxy =v is equivalent to  dx=v[1,], dy=v[2,]	dx|dy	yes.	<length>[2,N]	Specifies a sequence of xy-shifts  for the first n characters as the columns of a 2xn matrix.  The  first row contains the x-shifts, the second row the y-shifts.    Alternatively one may specify the shifts with the value as c(x1,y1, ...xN,yN). Again, these shifts start at the current text position for the characters within this **text** element or any of its descendants. 
feOffset	dxy	dxy =v is equivalent to  dx=v[1], dy=v[2]	dx|dy	yes.	<number>[2]	Specifies a vector to use to offset the imput graphic. The offset amounts are expressed in the coordinate system established by attribute *primitiveUnits* on the **filter** element. If the attribute is not specified, then the effect is as if a value of c(0,0) were specified.
radialGradient	fxy	fxy =v is equivalent to  fx=v[1], fy=v[2]	fx|fy	yes.	<coordinate>	Sets the beginning-stop point (aka the focal point) for the radial gradient.   The default vlaue is the value of cxy. 
hkern	g12	g12 =v is equivalent to  g1=v[1,], g2=v[2,]	g1|g2	no.	<name>[2,N]	Specifies  1st and 2nd  glyphs names in the kerning pair of the **hkern** as a character matrix, with the 1st glyphs names as the first row and the second glyphs names  as the second row. 
vkern	g12	g12 =v is equivalent to  g1=v[1,], g2=v[2,]	g1|g2	no.	<name>[2,N]	Specifies  1st and 2nd  glyphs names in the kerning pair of the **vkern** as a character matrix, with the 1st glyphs names as the first row and the second glyphs names  as the second row. 
filter	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width		<length>[2]	Sets the dimensions (width and height) of the filter effects region.
feBlend	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feColorMatrix	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feComponentTransfer	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feComposite	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feConvolveMatrix	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feDiffuseLighting	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feDisplacementMap	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feFlood	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feGaussianBlur	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feImage	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feMerge	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feMorphology	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feOffset	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feSpecularLighting	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feTile	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
feTurbulence	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the filter primitive subregion.  The default is c(100%,100%) or in other words, the width, height of the filter effect region.  A negative value is an error.  A zero value for either entry (width or height),  disables the filter primitive..
foreignObject	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the target region. The target region is a rectangular region where the foreign object is to be placed. A negative value is an error and a value of zero disables rendering of the foreign object.
image	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the target region. The target region is a rectangular region where the image is to be placed. A negative value is an error and a zero  entry for either width or height disables rendering of the image.
mask	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions  (width and height) of the offscreen buffer for the mask. A negative values produce an error.  A negative value is an error and a zero entry for either width or height, disables rendering of the image. The default is c( '120%', 120%).
pattern	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and  height)  of the pattern tile. Negative values produce an error.  A zero entry for either entry (width or height)  causes the rendering  to be disabled. The  default is c(0,0).
rect	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and  height)  of the rectangle.  Negative values produce an error. A zero value for either entry (width or height)  disables the rendering of the rectangle. The default is c(0,0).
svg	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions (width and height) of the svg element.  Negative values produce  an error. A zero value  either entry (width or height),  disables rendering of the element.  The attribute is not specified, the effect is as if a value of '100' were specified.
use	wh	wh =v is equivalent to  height=v[1], width=v[2]	height|width	yes.	<length>[2]	Sets the dimensions  (width and height) of  the rectangular region into which the referenced element is placed. A negative value produces an error. A zero value in either entry (width or height)  disables rendering.
font	horiz-origin-xy	horiz-origin-xy =v is equivalent to  horiz-origin-x=v[1], horiz-origin-y=v[2]	horiz-origin-x|horiz-origin-y	no.	<coordinate>[2]	Sets the position of the font-coordinate-system-origin  for a horizontally orientated text. Note this origin applies to all glyphs in the font.  Default is c(0,0).
feBlend	in12	in12 =v is equivalent to  in1=v[1], in2=v[2]	in|in2		SourceGraphic	Sets both the primary and secondary graphical inputs to the filter primitive.
feBlend	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feColorMatrix	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feComponentTransfer	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feComposite	in12	in12 =v is equivalent to  in=v[1], in2=v[2]	in|in2		SourceGraphic	Sets both the primary and secondary graphical inputs to the filter primitive.
feComposite	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feConvolveMatrix	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feDiffuseLighting	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feDisplacementMap	in12	in12 =v is equivalent to  in=v[1], in2=v[2]	in|in2		SourceGraphic	Sets both the primary and secondary graphical inputs to the filter primitive.
feDisplacementMap	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feGaussianBlur	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feMorphology	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feOffset	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feSpecularLighting	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feTile	in1	Alias for in	in		SourceGraphic	Sets the primary graphics input to be used for the given filter primitive.
feComposite	k1234	k1234 =v is equivalent to  k1=v[1], k2=v[2], k3=v[3], k4=v[4]	k1|k2|k3|k4	yes.	<numeric>[4]	Sets the values of (k1,k2,k3,k4) when the composite operator is arithmetic. Default is c(0,0,0,0,).
feSpotLight	pointsAtXYZ	pointsAtXYZ =v is equivalent to  pointsAtX=v[1], pointsAtY=v[2], pointsAtZ=v[3]	pointsAtX|pointsAtY|pointsAtZ	yes.	<coordinate>[3]	Sets the point (x,y,z) where the spotlight is point to.  Default is c(0,0,0).
marker	refXY	refXY =v is equivalent to  refX=v[1], refY=v[2]	refX|refY	yes.	<coordinate>[2]	Sets the marker reference point (x,y).  The marker reference point is the point one the cureve where the marker is to be attached.
ellipse	rxy	rxy =v is equivalent to  rx=v[1], ry=v[2]	rx|ry	yes.	<length>[2]	Sets simultaneously both the rx and ry radii of  the ellipse. A negative radius produces an error. A zero radius disables rendering of the ellipse.
rect	rxy	rxy =v is equivalent to  rx=v[1], ry=v[2]	rx|ry	yes.	<length>[2]	Sets the rx, ry radii at the corners of the rectangle, to form rounded corners. The rectangle can be thought of as having each corner replaced by a portion (1/4) of an ellipse, The default is  c(0,0).
feConvolveMatrix	targetXY	targetXY =v is equivalent to  targetX=v[1], targetY=v[2]	targetX|targetY	yes.	<integer>[2]	Sets the positioning c(targetx,targetY) of the convolution matrix relative to any given target pixel in the input image. The matrix is zero-based index, so first row has index 0, and likewise, the first column has index 0. The values for the entries targetX, targetY  are constrained by  0 <= targetX < orderX, 0<=targetY<orderY. By default, the convolution matrix is centered over each pixel of the input image (i.e., targetXY = floor ( c(orderX,orderY) / 2 )).
hkern	u12	u12 =v is equivalent to  u1=v[1,], u2=v[2,]	u1|u2	no.	<character> | <urange> [2,N]	Specifies  1st and 2nd  glyphs in the kerning pair of the **hkern** as a matrix of unicode characters or unicode ranges, with the 1st glyphs as the first row and the second glyphs as the second row. 
vkern	u12	u12 =v is equivalent to  u1=v[1,], u2=v[2,]	u1|u2	no.	<character> | <urange> [2,N]	Specifies  1st and 2nd  glyphs in the kerning pair of the **vkern** as a matrix of unicode characters or unicode ranges, with the 1st glyphs as the first row and the second glyphs as the second row. 
font	vert-origin-xy	vert-origin-xy =v is equivalent to  vert-origin-x=v[1], vert-origin-y=v[2]	vert-origin-x|vert-origin-y	no.	<numeric>[2]	Sets the position of the font-coordinate-system-origin  to be used for a vertically orientated text. Note this origin applies to all glyphs in the font.  Default is c( (horiz-adv-x)/2,ascent ) where horiz-adv-x and ascent represent the values of the correspondig attributes. 
glyph	vert-origin-xy	vert-origin-xy =v is equivalent to  vert-origin-x=v[1], vert-origin-y=v[2]	vert-origin-x|vert-origin-y	no.	<numeric>[2]	Sets the position of the glyph-origin of the glyph element, which is  to be used  when renderingr vertically oriented text. Default is c( font-origin-x, font-origin-y).
missing-glyph	vert-origin-xy	vert-origin-xy =v is equivalent to  vert-origin-x=v[1], vert-origin-y=v[2]	vert-origin-x|vert-origin-y	no.	<numeric>[2]	Sets the position of the glyph-origin of the missing.glyph element, which is to be used  when renderingr vertically oriented text. Default is c( font-origin-x, font-origin-y).
altGlyph	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2,N]	Specifies a sequence of xy-coordinates  to be applied to  the first n glyphs of the **altGlyph** element as the columns of a 2xn matrix.  The first row contains the x-coordinates, the second row the y-coordinates.    Alternatively one may specify the coordinates with the value as c(x1,y1, ...xN,yN). Again, these coordinates are absolute and are applied sequentially starting with the first character.
cursor	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position the precise position of the point which the cursor is pointing to. The default is c(0,0).
filter	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y		<coordinate>[2]	Sets the position of the top-left corner of the filter effects region.
feBlend	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feColorMatrix	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feComponentTransfer	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feComposite	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feConvolveMatrix	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feDiffuseLighting	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feDisplacementMap	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feFlood	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feGaussianBlur	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feImage	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feMerge	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feMorphology	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feOffset	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feSpecularLighting	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feTile	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
feTurbulence	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the filter primitive subregion.
foreignObject	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of the target region. The target region is a rectangular region where the foreign object is to be placed.  Default is c(0,0).
glyphRef	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	no.	<coordinate>[2]	Sets the absolute position for this glyph  within the font's coordinate system for this glyph. 
image	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner  of the target region. The target region is a rectangular region where the image is to be placed. Default is c(0,0).
mask	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position the top-left corner of the masking region (where the offscreen buffer results are placed).  . The default is c((-10%,-10%)).
pattern	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of  the reference pattern to be tiled. Default is c(0,0).
rect	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner  of the rectangle.  Default is c(0,0).
svg	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the position of the top-left corner of where the svg is to be placed. This has no effect on the outermost svg (such as svgR) and applies only to inner svg elements. The default is c(0,0).
tref	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2,N]	Specifies a sequence of xy-coordinates  to be applied to  the first n glyphs of the **tref** element as the columns of a 2xn matrix.  The first row contains the x-coordinates, the second row the y-coordinates.    Alternatively one may specify the coordinates with the value as c(x1,y1, ...xN,yN). Again, these coordinates are absolute and are applied sequentially starting with the first character.
tspan	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2,N]	Specifies a sequence of xy-coordinates  to be applied to  the first n glyphs of the **tspan** element as the columns of a 2xn matrix.  The first row contains the x-coordinates, the second row the y-coordinates.    Alternatively one may specify the coordinates with the value as c(x1,y1, ...xN,yN). Again, these coordinates are absolute and are applied sequentially starting with the first character.
text	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2,N]	Specifies a sequence of xy-coordinates  to be applied to  the first n characters of the **text** element as the columns of a 2xn matrix.  The first row contains the x-coordinates, the second row the y-coordinates.    Alternatively one may specify the coordinates with the value as c(x1,y1, ...xN,yN). Again, these coordinates are absolute and are applied sequentially starting with the first character.
use	xy	xy =v is equivalent to  x=v[1], y=v[2]	x|y	yes.	<coordinate>[2]	Sets the top-left corner of  the rectangular region into which the referenced element is placed. Default is c(0,0).
fePointLight	xyz	xyz =v is equivalent to  x=v[1], y=v[2], z=v[3]	x|y|z	yes.	<coordinate>[3]	Sets the  location (x,y,z) of the point light source in the coordinate system established by attribute primitiveUnits on the filter element. Default is c(0,0,0).
feSpotLight	xyz	xyz =v is equivalent to  x=v[1], y=v[2], z=v[3]	x|y|z	yes.	<coordinate>[3]	Sets the  location (x,y,z) of the spot light source in the coordinate system established by attribute primitiveUnits on the filter element. Default is c(0,0,0).
line	x12	x12 =v is equivalent to  x1=v[1], x2=v[2]	x1|x2	yes.	<coordinate>[2]	Sets the starting and ending  x-coordinates of the line segment.  Default is c(0,0).
line	xy1	xy1 =v is equivalent to  x1=v[1], y1=v[2]	x1|y1	yes.	<coordinate>[2]	Sets the starting point (aka from point) defining the line segment. Default is c(0,0)
linearGradient	x12	x12 =v is equivalent to  x1=v[1], x2=v[2]	x1|x2	yes.	<coordinate>[2]	Sets the  x-coordinates of starting and ending  points of the gradient-line-segment ( aka. Gradient line vector) for the linear gradient. The gradient stops are mapped onto the gradient-line-segment with the 0% stop mapping to the starting point, and the 100% stop mapping to the endding point. Default is c(0%,100%).
linearGradient	xy1	xy1 =v is equivalent to  x1=v[1], y1=v[2]	x1|y1	yes.	<coordinate>[2]	Sets the starting point of the gradient-line-segment ( aka. Gradient line vector) for the linear gradient. The gradient stops are mapped onto the gradient-line-segment with the 0% stop mapping to the starting point, and the 100% stop mapping to the endding point. Default is c(0,0).
line	xy2	xy2 =v is equivalent to  x2=v[1], y2=v[2]	x2|y2	yes.	<coordinate>[2]	Sets the ending point (aka the to  point) defining the line segment. Default is c(0,0)
linearGradient	xy2	xy2 =v is equivalent to  x2=v[1], y2=v[2]	x2|y2	yes.	<coordinate>[2]	Sets the ending point of the gradient-line-segment ( aka. Gradient line vector) for the linear gradient. The gradient stops are mapped onto the gradient-line-segment with the 0% stop mapping to the starting point, and the 100% stop mapping to the endding point. Default is c(100%,0%).
line	y12	y12 =v is equivalent to  y1=v[1], y2=v[2]	y1|y2	yes.	<coordinate>[2]	Sets the starting and ending  y-coordinates of the line segment.  Default is c(0,0).
linearGradient	y12	y12 =v is equivalent to  y1=v[1], y2=v[2]	y1|y2	yes.	<coordinate>[2]	Sets the  y-coordinates of starting and ending  points of the gradient-line-segment ( aka. Gradient line vector) for the linear gradient. The gradient stops are mapped onto the gradient-line-segment with the 0% stop mapping to the starting point, and the 100% stop mapping to the endding point. Default is c(0,0).
feTurbulence	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feConvolveMatrix	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feDiffuseLighting	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feOffset	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
filter	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter effects region to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feBlend	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feColorMatrix	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feComponentTransfer	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feComposite	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feDisplacementMap	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feFlood	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feGaussianBlur	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feImage	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feMerge	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feMorphology	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feSpecularLighting	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
feTile	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the position of the filter primitive subregion to have the given point as its center. Equivalent to \code{xycxy-wh/2}.
svg	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of a non-outer  **svg**  element to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}. Has no effect on the outermost **svg** (**svgR**).
foreignObject	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the placement of the foreignObject such that its centerd at  the given point. Equivalent to \code{xycxy-wh/2}.
image	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  **image**  element to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
mask	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  **mask**  to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
pattern	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  *pattern-tile*  to be the given of x-y-coordinate vector.   That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}. Repeating the  *pattern-tile* provides pattern effect, and the centering provides control of the alignment.
rect	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  **rect**  element to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
use	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the element referenced by **use** given by the vector of x-y-coordinates. That is, given the width and height, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
text	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  **text**  element to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
textPath	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  **textPath**  element to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
tspan	cxy	coordinates of center	x|y	yes	<coordinate>[2]	Sets the center of the  **tSpan**  element to be the given of x-y-coordinate vector.  That is, given the *width* and *height*, the placement  is adjusted to insure centering about the given vector. This is equivalent to \code{xycxy-wh/2}.
linearGradient	colors	a sequence of colors	stop	yes	<color>[N]	Specifies a sequence of colors expressed as a vector for the linearGradient. If no stop sequence is specified, the stops are equally spaced.
linearGradient	offsets	a sequence of color stop positions	stop	yes	<numeric|percentage>[N]	Specifies a sequence of color stop positions as a vector for the linearGradient. 
radialGradient	colors	a sequence of colors	stop	yes	<color>[N]	Specifies a sequence of colors expressed as a vector for the radialGradient. If no stop sequence is specified, the stops are equally spaced.
radialGradient	offsets	a sequence of color stop positions	stop	yes	<numeric|percentage>[N]	Specifies a sequence of color stop positions as a vector for the radialGradient. 
